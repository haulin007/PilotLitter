[HttpPost]
        [Route("Pilot/DBClearPersonPosition")]
        public IActionResult DBClearPersonPosition(
            [FromQuery] int IdPersonSystem = -1)
        {
            #region get pilot tool
            string ServerName = (string)HttpContext.Items["ServerName"];
            string ServerPort = (string)HttpContext.Items["ServerPort"];
            string BaseName = (string)HttpContext.Items["BaseName"];
            PilotAdminTool pilotAdminTool = new PilotAdminTool(
                "http://" + ServerName + ":" + ServerPort + "/" + BaseName,
                Startup.config["user"].ToString(),
                Startup.config["password"].ToString());
            pilotAdminTool.Loggin(BaseName);
            pilotAdminTool.adminApi.OpenDatabase(BaseName);
            #endregion

            var Token = (string)HttpContext.Items["Token"];
            if (IdPersonSystem == -1)
            {
                Response.StatusCode = 400;
                return Content("Id's can't be null or empty");
            }

            //get actual Id for PIlot if Extern system not Pilot
            if ((int)HttpContext.Items["IdSys"] != 1)
                IdPersonSystem = PostgreTool.GetIdPersonByIdSystem(IdPersonSystem, Token);

            try
            {
                    try
                    {
                        var changedPerson = GetDPersonById(IdPerson);
                        if (changedPerson == null)  return "ERROR;Can't find by id";

                        //TODO to delete
                        Console.WriteLine($"Main position : {changedPerson.MainPosition()}");

                        //adminApi.SetPeopleOnPosition(new DPersonOnPositionData()
                        //  { Person = null, PositionId = changedPerson.MainPosition() });
                        changedPerson.Positions.Remove(changedPerson.MainPosition());
                        changedPerson.AllOrgUnits.Remove(changedPerson.MainPosition());
                        adminApi.UpdatePerson(changedPerson);

                        return GetPersonById(IdPerson);
                    }
                    catch (Exception e)
                    {
                        return "ERROR in pilot tool;" + e.Message;
                    }
            }
            catch (Exception e)
            {
                Response.StatusCode = 402;
                return Content(e.Message);
            }
            finally
            {
                pilotAdminTool.Dispose();
            }
        }
